#!/bin/bash

# default values
DEFAULT_BUILD_VERSION="0.1"
DEFAULT_BUILD_NUMBER="0"
DEFAULT_BUILD_REVISION="0"

# only try to extract if the project uses git
if [ -d ".git" ]; then

  # the most recent tag is the next release
  # BUILD_VERSION=$(git describe --tags --abbrev=0 $(git rev-list --tags --max-count=1 HEAD) 2>/dev/null)
  if [ -z "$BUILD_VERSION" ]; then
    BUILD_VERSION=$DEFAULT_BUILD_VERSION
    # echo "WARNING: Build is not tagged."
  fi

  # get the build number
  BUILD_NUMBER=$(git log --oneline | wc -l | tr -cd '[[:digit:]]')

  # get the revision
  BUILD_REVISION=$(git rev-parse --short HEAD 2>/dev/null | tr -cd '[[:xdigit:]]')
  if [ -z "$BUILD_REVISION" ]; then
    # still empty means there has not been a comit yet
    BUILD_REVISION=$DEFAULT_BUILD_REVISION
  fi

  # more information on intermediate builds
  COMMITS_SINCE_TAG=$(git rev-list HEAD --not "$BUILD_VERSION" 2>/dev/null | wc -l | tr -cd '[[:digit:]]' | sed 's/^0$//')
  NOT_COMMITTED=$(git status --porcelain 2>/dev/null | egrep "^(M| M|A| A|\?\?)" | wc -l | tr -cd '[[:digit:]]' | sed 's/^0$//')
  if [ "${COMMITS_SINCE_TAG}M${NOT_COMMITTED}" != "M" ]; then
    echo "WARNING: Build is dirty."
    BUILD_REVISION="${BUILD_REVISION}T${COMMITS_SINCE_TAG}M${NOT_COMMITTED}"
  fi

else
  # no git, no revision, default first version
  BUILD_VERSION=$DEFAULT_BUILD_VERSION
  BUILD_REVISION=$DEFAULT_BUILD_REVISION
  BUILD_NUMBER=$DEFAULT_BUILD_NUMBER
fi

BUILD_YEAR=`date +%Y`

# create the file for the preprocessor
if [ -z "$PROJECT_TEMP_DIR" ]; then
  echo "BUILD_VERSION  = '$BUILD_VERSION'"
  echo "BUILD_NUMBER   = '$BUILD_NUMBER'"
  echo "BUILD_REVISION = '$BUILD_REVISION'"
  echo "BUILD_YEAR     = '$BUILD_YEAR'"
else
  PREFIX_FILE="$PROJECT_TEMP_DIR/Info.plist.prefix"
  echo "Created Info.plist prefix file $PREFIX_FILE for $BUILD_VERSION $BUILD_VERSION"
  (
    echo "#define BUILD_VERSION  $BUILD_VERSION"
    echo "#define BUILD_NUMBER   $BUILD_NUMBER"
    echo "#define BUILD_REVISION $BUILD_REVISION"
    echo "#define BUILD_YEAR     $BUILD_YEAR"
  ) > "$PREFIX_FILE"
fi
